[null,{"name":"join","temp":"join","event-type":"0","_id":"ehUiE","actions":[{"info":"0","find":"689148696838930442","storage":"1","varName":"logi","name":"Find Channel"},{"title":"__**Wejście**__","author":"","color":"RANDOM","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"xdd","name":"Create Embed Message"},{"storage":"1","varName":"xdd","message":"${tempVars(\"join\")} dołączył na serwer.\n","name":"Set Embed Description"},{"storage":"1","varName":"xdd","message":"VisionBOT Logs©","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"xdd","channel":"5","varName2":"logi","name":"Send Embed Message"},{"title":"__**Wejście**__","author":"","color":"4fff33","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"xd","name":"Create Embed Message"},{"storage":"1","varName":"xd","message":"${tempVars(\"join\")} dołączył na serwer.","name":"Set Embed Description"},{"storage":"1","varName":"xd","message":"VisionBOT©","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"xd","channel":"4","varName2":"","name":"Send Embed Message"}]},{"name":"Anti Link Update","permissions":"NONE","restriction":"1","_id":"smLyC","actions":[{"comment":"# NÃO CONFIGURE ESSA PARTE","color":"#ff0000","name":"Comment"},{"server":"0","varName":"","dataName":"anti-invites-automatico","comparison":"1","value":"2","iftrue":"2","iftrueVal":"4","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"server":"0","varName":"","dataName":"anti-invites-automatico","comparison":"1","value":"3","iftrue":"1","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"message":"1","varName":"Message","info":"2","storage":"1","varName2":"say","name":"Store Message Info"},{"storage":"1","varName":"say","comparison":"5","value":"'https://'","iftrue":"2","iftrueVal":"9","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"1","varName":"say","comparison":"5","value":"'.com'","iftrue":"2","iftrueVal":"9","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"1","varName":"say","comparison":"5","value":"'.net'","iftrue":"2","iftrueVal":"9","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"1","varName":"say","comparison":"5","value":"'.gov'","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"message":"1","varName":"Message","info":"1","storage":"1","varName2":"Message ID","name":"Store Message Info"},{"message":"1","varName":"Message","info":"4","storage":"1","varName2":"channel","name":"Store Message Info"},{"channel":"3","varName":"channel","info":"1","search":"${tempVars(\"Message ID\")}","storage":"1","varName2":"Message Delete","name":"Find Message"},{"storage":"1","varName":"Message Delete","name":"Delete Message"},{"comment":"# ALTERE O TEXTO / AQUI","color":"#00ff00","name":"Comment"},{"message":"1","varName":"Message","info":"3","storage":"1","varName2":"Member","name":"Store Message Info"},{"channel":"5","varName":"channel","message":":x: ${tempVars(\"Member\")} | **Nie wysyłaj tutaj linków. Ok?**","storage":"1","varName2":"DELETE PLEAAAASE","name":"Send Message"},{"time":"5","measurement":"1","name":"Wait"},{"storage":"1","varName":"DELETE PLEAAAASE","name":"Delete Message"},{"comment":"# CRIADO POR: Helder.#5698 / ( :3 )","color":"#800040","name":"Comment"}],"comType":"3","event-type":"26","temp":"Message Prior","temp2":"Message"},{"name":"game","temp":"","event-type":"3","_id":"piBVm","actions":[{"activity":"2","nameText":"VisionRP","url":"","stat":"0","name":"Set Bot Activity"}]},{"name":"del.message","temp":"msg","event-type":"18","_id":"frfaT","actions":[{"info":"0","find":"689148696838930442","storage":"1","varName":"chat","name":"Find Channel"},{"message":"1","varName":"msg","info":"3","storage":"1","varName2":"owner","name":"Store Message Info"},{"member":"2","varName":"owner","info":"3","storage":"1","varName2":"servername","name":"Store Member Info"},{"message":"1","varName":"msg","info":"2","storage":"1","varName2":"text","name":"Store Message Info"},{"message":"1","varName":"msg","info":"4","storage":"1","varName2":"chanel","name":"Store Message Info"},{"message":"1","varName":"msg","info":"1","storage":"1","varName2":"id","name":"Store Message Info"},{"title":"","author":"","color":"RANDOM","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"true","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"emb","name":"Create Embed Message"},{"storage":"1","varName":"emb","fieldName":"!!!","message":"**Usunięta Wiadomość**","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"emb","fieldName":"Treść","message":"```\n${tempVars(\"text\")}\n```","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"emb","fieldName":"Właściciel","message":"${tempVars(\"owner\")}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"emb","fieldName":"Kanał","message":"${tempVars(\"chanel\")}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"emb","message":"VisionBOT Logs©","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"emb","channel":"5","varName2":"chat","name":"Send Embed Message"}]},{"name":"AntiInvite","temp":"message","event-type":"2","_id":"hMNTI","actions":[{"info":"0","find":"683354170283261958","storage":"1","varName":"rola","name":"Find Role"},{"member":"2","varName":"LooF","role":"3","varName2":"rola","iftrue":"2","iftrueVal":"9","iffalse":"0","iffalseVal":"","name":"Check If Member has Role"},{"info":"1","find":"LooF","storage":"1","varName":"LooF","find2":"0","name":"Find Member"},{"message":"1","varName":"message","info":"2","storage":"1","varName2":"txt","name":"Store Message Info"},{"storage":"1","varName":"txt","comparison":"5","value":"discord.gg","iftrue":"3","iftrueVal":"1","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"1","varName":"txt","comparison":"5","value":"discordapp.com/invite","iftrue":"0","iftrueVal":"1","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"message":"1","varName":"message","info":"3","storage":"1","varName2":"author","name":"Store Message Info"},{"message":"1","varName":"message","info":"4","storage":"1","varName2":"channel","name":"Store Message Info"},{"storage":"1","varName":"message","name":"Delete Message"},{"channel":"5","varName":"channel","message":"```Reklama```\n\n``Prosimy o zaprzestanie reklamowania innych serwerów, próba dalszego reklamowania wiąże się z natychmiastowym banem.``\n\n${tempVars(\"author\")}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"Mem join","temp":"","event-type":"6","_id":"SapdI","actions":[{"server":"0","varName":"","info":"17","storage":"1","varName2":"memvber","name":"Store Server Info"},{"storage":"4","varName":"użytkownicy","channelType":"1","toChange":"0","newState":"「⚡」Osób: ${tempVars(\"memvber\")}/200","name":"Edit Channel"}]},{"name":"Mem leave","temp":"","event-type":"7","_id":"ussas","actions":[{"server":"0","varName":"","info":"17","storage":"1","varName2":"memvber","name":"Store Server Info"},{"storage":"4","varName":"użytkownicy","channelType":"1","toChange":"0","newState":"「⚡」Osób: ${tempVars(\"memvber\")}/200","name":"Edit Channel"}]},{"name":"reactionGet","temp":"msgReaction","event-type":"28","_id":"zimku","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nvar rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.last();\nconst _this = this;\nconst fs = require('fs');\nvar messageSent = 'Pomyślnie dodano rangę {roleName} na serwerze {server}';\n// The only variables that work rn, {rolename} and {server}\nvar interval;\n\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\nasync function checkRoles() {\n    try {\n        if (usrWhoReacted.id != client.user.id) {\n\n            if (rectarray[msgRct.id] != null) {\n                var newArr = rectarray[msgRct.id];\n                for (io = 0; io < newArr.length; io++) {\n                    if (newArr[io][0] == reaction.emoji.name || newArr[io][0].name == reaction.emoji.name) {\n                        var newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n                        var checkRole = await msgRct.guild.roles.get(newArr[io][1])\n                        if (checkRole != null) {\n                            let newUserArrayIds = [];\n                            let newUserArray = await reaction.users.array();\n\n                            newUserArray.forEach(useritem => {\n                                newUserArrayIds.push(useritem.id)\n                            });\n                            rectarray[msgRct.id][io][3] = newUserArrayIds;\n                            if (newUsr.roles.has(newArr[io][1])) {\n\n                                _this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                    if (err) {\n                                        return console.log(err);\n                                    }\n                                });\n                                break;\n                            } else {\n\n                                newUsr.addRole(checkRole);\n                                if (dmUserAfter) {\n                                    messageSent = messageSent.replace(/{roleName}/g, checkRole.name);\n                                    messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n                                    newUsr.send(messageSent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                    if (err) {\n                                        return console.log(err);\n                                    }\n                                });\n                                break;\n                            }\n                        } else {\n                            delete rectarray[msgRct.id];\n                            _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n\n                            msgRct.edit({\n                                embed: {\n                                    color: 0xff0000,\n                                    title: \"Role Reaction Menu\",\n                                    description: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n                                    timestamp: new Date()\n                                }\n                            });\n                            _this.callNextAction(cache);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"}]},{"name":"reactionRev","temp":"msgReaction","event-type":"29","_id":"ZQmhC","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nvar rectarray = globalVars('reactionRoleInf');\nlet usrWhoReacted = reaction.users.array();\nconst _this = this;\nconst fs = require('fs');\n\nlet newUserArrayIds = [];\nlet newUserArray = reaction.users.array();\n\nnewUserArray.forEach(useritem => {\n    newUserArrayIds.push(useritem.id)\n});\n\nvar messageSent = 'Pomyślnie usunięto rangę {roleName} na serrwerze {server}';\n// The only variables that work rn, {rolename} and {server}\nvar actualUser;\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\nasync function checkRoles() {\n    try {\n        if (rectarray[msgRct.id] != null) {\n            var newArr = rectarray[msgRct.id];\n            for (io = 0; io < newArr.length; io++) {\n                if (newArr[io][0] == reaction.emoji.name || newArr[io][0].name == reaction.emoji.name) {\n                    if (rectarray[msgRct.id][io][3] != null) {\n                        usrWhoReacted = rectarray[msgRct.id][io][3].filter(val => !newUserArrayIds.includes(val))[0];\n                        if (usrWhoReacted != null) {\n                            var newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n                            var checkRole = await msgRct.guild.roles.get(newArr[io][1]);\n                            if (checkRole != null) {\n                                if (!newUsr.roles.has(newArr[io][1])) {\n                                    var newUsrIDs = [];\n                                    var arrUsrIds = await reaction.users.array();\n                                    arrUsrIds.forEach(useritem => {\n                                        newUsrIDs.push(useritem.id)\n                                    });\n                                    rectarray[msgRct.id][io][3] = newUsrIDs;\n                                    _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n                                    fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                        if (err) {\n                                            return console.log(err);\n                                        }\n                                    });\n                                    break;\n                                } else {\n                                    var newUsrIDs = [];\n                                    var arrUsrIds = await reaction.users.array();\n                                    arrUsrIds.forEach(useritem => {\n                                        newUsrIDs.push(useritem.id)\n                                    });\n                                    rectarray[msgRct.id][io][3] = newUsrIDs;\n                                    _this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                    newUsr.removeRole(checkRole);\n                                    if (dmUserAfter) {\n                                        messageSent = messageSent.replace(/{roleName}/g, checkRole.name);\n                                        messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n                                        newUsr.send(messageSent);\n                                    }\n                                    fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                        if (err) {\n                                            return console.log(err);\n                                        }\n                                    });\n                                    break;\n                                }\n                            } else {\n                                delete rectarray[msgRct.id];\n                                _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n                                msgRct.edit({\n                                    embed: {\n                                        color: 0xff0000,\n                                        title: \"Role Reaction Menu\",\n                                        description: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n                                        timestamp: new Date()\n                                    }\n                                });\n                                _this.callNextAction(cache);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"}]},{"name":"Memes","temp":"memes","event-type":"2","_id":"gMzsK","actions":[{"message":"1","varName":"memes","info":"4","storage":"1","varName2":"channelcheck","name":"Store Message Info"},{"storage":"1","varName":"memes","comparison":"1","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check Variable Type"},{"storage":"1","varName":"memes","comparison":"9","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check Variable Type"},{"storage":"1","varName":"memes","comparison":"0","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check Variable Type"},{"storage":"1","varName":"channelcheck","comparison":"1","value":"serverVars(\"memechannel\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"message":"1","varName":"memes","info":"2","storage":"1","varName2":"test","name":"Store Message Info"},{"storage":"1","varName":"test","comparison":"0","value":"","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"1","varName":"memes","emoji":"4","varName2":"➕","varName3":"upvoteicon","name":"Add Reaction"},{"storage":"1","varName":"memes","emoji":"4","varName2":"➖","varName3":"","name":"Add Reaction"}]},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"behavior":"0","interpretation":"1","code":"const _this = this;\nconst fs = require('fs');\nvar someArray = [];\nvar someNum = 0;\nvar globalData;\nvar interval;\n\nfunction fetchMessages() {\n    if (someNum != someArray.length) {\n        var channelToFetch = client.channels.get(someArray[someNum]);\n        if (channelToFetch != null) {\n           channelToFetch.fetchMessages({ limit: 100 });\n           console.log(`Fetched messages in channel id ${someArray[someNum]}`);\n           someNum = someNum + 1;\n        } else {\n           delete globalData[someArray[someNum]];\n           fs.writeFile(\"./resources/serverRoleMenu.json\", JSON.stringify(globalData), function(err) {\n               if(err) {\n                   return console.log(err);\n               }\n           }); \n        }\n    } else {\n       console.log('Finished fetching messages from all logged servers.')\n       clearInterval(interval);\n    }\n   }\n\nif(fs.existsSync('./data/reactionRoleData.json')) {\n    fs.readFile('./data/reactionRoleData.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        data = JSON.parse(data)\n    \n        _this.storeValue(data, 3, 'reactionRoleInf', cache);\n    });\n} else {\n    fs.writeFile(\"./data/reactionRoleData.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n    _this.storeValue({}, 3, 'reactionRoleInf', cache);\n}\n\n\n\nif(fs.existsSync('./resources/serverRoleMenu.json')) {\n    fs.readFile('./resources/serverRoleMenu.json', async function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        var DataToLoop = JSON.parse(data);\n        globalData = DataToLoop;\n        for (var key in DataToLoop) {\n            if (DataToLoop.hasOwnProperty(key)) {\n                await someArray.push(DataToLoop[key]);\n            }\n        }\n        interval = setInterval(fetchMessages, 2000);\n    })\n\n} else {\n    fs.writeFile(\"./resources/serverRoleMenu.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n}\n\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"NewEvent","temp":"","event-type":"0","_id":"jiFxX","actions":[]},{"name":"NewEvent","temp":"","event-type":"0","_id":"hJxMo","actions":[]},{"name":"leave","temp":"leave","event-type":"7","_id":"dYTbV","actions":[{"info":"0","find":"689148696838930442","storage":"1","varName":"logi","name":"Find Channel"},{"title":"__**Wyjście**__","author":"","color":"RANDOM","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"xdd","name":"Create Embed Message"},{"storage":"1","varName":"xdd","message":"${tempVars(\"leave\")} wyszedł z serwera.\n","name":"Set Embed Description"},{"storage":"1","varName":"xdd","message":"VisionBOT Logs©","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"xdd","channel":"5","varName2":"logi","name":"Send Embed Message"},{"title":"__**Wyjście**__","author":"","color":"ff0000","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"xd","name":"Create Embed Message"},{"storage":"1","varName":"xd","message":"${tempVars(\"leave\")} opuścił serwer.","name":"Set Embed Description"},{"storage":"1","varName":"xd","message":"VisionBOT©","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"xd","channel":"4","varName2":"","name":"Send Embed Message"}]},{"name":"NewMemberRank","temp":"NewMember","event-type":"6","actions":[{"info":"0","find":"683355790542897191","storage":"1","varName":"Role","name":"Find Role"},{"member":"2","varName2":"NewMember","role":"3","varName":"Role","name":"Add Member Role"}],"_id":"vofhM"}]